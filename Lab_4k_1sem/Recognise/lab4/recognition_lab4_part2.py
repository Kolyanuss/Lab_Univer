# -*- coding: utf-8 -*-
"""Recognition_lab4.ipynb"

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GX3p8co6OaIYFR38z-vEbkUcWUyA-AKJ

# Розпізнавання об'єктів на зображеннях з набору даних CIFAR-10
"""

import numpy as np
from keras.datasets import cifar10
from keras.models import Sequential
from keras.utils import np_utils
from keras.preprocessing import image
import matplotlib.pyplot as plt

# %matplotlib inline

# Кількість класів зображень
nb_classes = 10
# Назви класівз набору даних  CIFAR-10
classes = ['літак', 'автомобіль', 'птиця', 'кіт', 'олень', 'собака', 'жаба', 'кінь', 'корабель', 'вантажівка']

"""## Підготовка даних

**Завантажуємо дані**
"""

(X_train, y_train), (X_test, y_test) = cifar10.load_data()

"""**Перагляд прикладів даних**"""

n = 1
plt.imshow(X_train[n])
plt.show()
print("Номер класу:", y_train[n])
print("Тип об'єкту:", classes[y_train[n][0]])

"""**Нормалізуємо  дані**"""

X_train = X_train.astype('float32')
X_test = X_test.astype('float32')
X_train /= 255
X_test /= 255

"""**Перетворюємо вірні відповіді в формат one hot encoding**"""

Y_train = np_utils.to_categorical(y_train, nb_classes)
Y_test = np_utils.to_categorical(y_test, nb_classes)


# from google.colab import files

# files.download("cifar10_model.json")
# files.download("cifar10_model1.h5")

"""## Застосовуємо мережу для розпізнавання об'єктів на зображеннях

**Перегляд зображення з набору даних для тестування**
"""

index=22
plt.imshow(X_test[index])
plt.show()

"""**Перетворення тестового зображення**"""

x = X_test[index]
x = np.expand_dims(x, axis=0)

"""**Запуск распізнавання**"""

prediction = model.predict(x)

"""**Друкуємо результати розпізнавання**"""

print(prediction)

"""**Перетворюємо результати з формату one hot encoding**"""

prediction = np.argmax(prediction)
print(classes[prediction])

"""**Друкуємо вірну відповідь**"""

print(classes[y_test[index][0]])

"""## Розпізнаємо додаткове зображення"""

img_path = 'вантажівка2.jpg'
img = image.load_img(img_path, target_size=(32, 32))
plt.imshow(img)
plt.show()

"""**Перетворюємо малюнок в масив для розпізнавання**"""

x = image.img_to_array(img)
x /= 255
x = np.expand_dims(x, axis=0)

"""**Запускаємо розпізнавання**"""

prediction = model.predict(x)
prediction = np.argmax(prediction)
print(classes[prediction])
