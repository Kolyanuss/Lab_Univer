Мікросервіса.
Чому я вибрав їх, а не розробку сайту?
Першою причиною є те - що я більше спеціалізуюсь на розробці бекенду а не фронтенду.
Другою - фронтенд для курсової розроблять майже всі студенти,
  а я хочу показати дещо інше, дещо новеньке!
Окей!
Мікросервіси - це арахітектурний стиль, суть якого "поділяй і володарюй". 
Якщо коротко і зрозуміло - ми розділяємо нашу монолітну базу даних ТА бекенд -
   на декілька частин - модулів, які будуть взаємодіяти між собою.
ПЕРЕВАГИ цих модулів - легка та зрозуміла структура, легкість їх подальшого мастштабування.

Актуальність
 На сьогоднішній день онлайн перегляд продовжує набирати популярність.
Багато людей, з дебільшого молодь, хоче мати - вільний, легкий, та зручний доступ до перегляду фільмів.
А в наші часи масове скупченння людей є не зовсім безпечне.

Метою було:
 - створення бази даних
 - приведення її до нормальної форми бойса кода
 - Створення декількох мікросервісів, мінімум 3
 - реалізувати REST API із повноцінними CRUD запитами для кожного із них

**ІНШІ СЛАЙДИ**

Висновок:
Під час реалізації курсового проекту було започатковано розробку мікросервісу.
Створено 5 сервісів та 4 бази даних, які були приведені до нормальної форми.
А для API було реалізовано повноцінні CRUD запити.
В мікросервісі присутня синхронізація бд за допомогою обміну помідомленнями через message broker.
А всі APi було зібрано в одному місці за допомогою фреймворку ocelot.
Реалізовано кешування для бази даних "Корзина", та швидкі запити із каталогу за допомогою Mongo.
ПРАЦЮЮЧИ над проектом, я поглибив знання у проектуванні БАЗ ДАНИХ та принципів роботи із МІКРОСЕРВІСАМИ!

На закінчення пропоную переглянути коротке відео, яке демонструє роботу мого проекту.

Проект можна ще багато доробляти та модернізовувати адже можливості для розвитку є КОЛОСАЛЬНІ!!!
До прикладу:
- збільшення різноманіття запитів
- покращення спілкування між сервісами
- добавлення нового способу обміну повідомленнями за допомогою GRPC.
- добавлення нового мікросервісу - Сповіщення
- модернізація одного із мікросервісів для добалвення оцінки фільму
- розробка веб сайту
- добавлення підтримки Kubernetes
- подальше розгортання сервісів в хмарі.